# Kafka Configuration
spring.kafka.bootstrap-servers=${KAFKA_BROKERS:localhost:9092}
spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP:action-events-group}

# Topic Configuration
kafka.topic.name=action-events
kafka.topic.partitions=1
kafka.topic.replication-factor=1

# Email Configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${SMTP_USERNAME}
spring.mail.password=${SMTP_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# FreeMarker Configuration
spring.freemarker.template-loader-path=classpath:/templates/
spring.freemarker.suffix=.ftlh
spring.freemarker.cache=true
spring.freemarker.charset=UTF-8
spring.freemarker.content-type=text/html
spring.freemarker.check-template-location=true

# Metrics Configuration
management.endpoints.web.exposure.include=health,metrics,prometheus
management.endpoint.health.show-details=always
management.metrics.tags.application=kafka-consumer
management.metrics.enable.all=true

# Email Notification Settings
notification.email.from=alerts@yourdomain.com
notification.email.to=admin@yourdomain.com

# Logging
logging.level.com.example.kafka=INFO
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Application Settings
spring.application.name=kafka-consumer
server.port=8080
management.server.port=8081

# Kafka Consumer Settings
kafka.consumer.concurrency=${KAFKA_CONSUMER_CONCURRENCY:1}
kafka.consumer.max-poll-records=${KAFKA_MAX_POLL_RECORDS:500}
kafka.consumer.fetch-min-bytes=${KAFKA_FETCH_MIN_BYTES:1048576}
kafka.consumer.fetch-max-wait=${KAFKA_FETCH_MAX_WAIT:500}

# Kafka Security (for AWS)
kafka.security.enabled=${KAFKA_SECURITY_ENABLED:false}
kafka.security.protocol=${KAFKA_SECURITY_PROTOCOL:PLAINTEXT}
kafka.ssl.keystore-location=${KAFKA_KEYSTORE_LOCATION:}
kafka.ssl.truststore-location=${KAFKA_TRUSTSTORE_LOCATION:}
kafka.ssl.keystore-password=${KAFKA_KEYSTORE_PASSWORD:}
kafka.ssl.truststore-password=${KAFKA_TRUSTSTORE_PASSWORD:}

# AWS Settings
aws.region=${AWS_REGION:us-east-1}
management.metrics.export.cloudwatch.enabled=${CLOUDWATCH_ENABLED:false}
management.metrics.export.cloudwatch.namespace=${CLOUDWATCH_NAMESPACE:KafkaConsumer}
management.metrics.export.cloudwatch.batch-size=${CLOUDWATCH_BATCH_SIZE:20}

# Circuit Breaker Configuration
resilience4j.circuitbreaker.instances.default.slidingWindowSize=10
resilience4j.circuitbreaker.instances.default.failureRateThreshold=50
resilience4j.circuitbreaker.instances.default.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.default.permittedNumberOfCallsInHalfOpenState=3

# Retry Configuration
spring.kafka.consumer.retry.max-attempts=3
spring.kafka.consumer.retry.initial-interval=1s
spring.kafka.consumer.retry.max-interval=10s
spring.kafka.consumer.retry.multiplier=2

# Logging Configuration
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.file.name=kafka-consumer.log
logging.file.max-size=10MB
logging.file.max-history=5

# Performance Tuning
spring.kafka.consumer.fetch-max-wait=500
spring.kafka.consumer.fetch-min-size=1
spring.kafka.consumer.max-poll-records=500
spring.kafka.consumer.heartbeat-interval=3000
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=false

# Connection Pool Settings
spring.kafka.consumer.properties.max.poll.interval.ms=300000
spring.kafka.consumer.properties.session.timeout.ms=60000
spring.kafka.consumer.properties.request.timeout.ms=30000
